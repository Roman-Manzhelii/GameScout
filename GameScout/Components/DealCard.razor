@using GameScout.Domain.Models

@if (Deal is not null)
{
    <article class="card deal-card">
        <img class="cover"
             src="@(!string.IsNullOrWhiteSpace(Deal.Image) ? Deal.Image : "/img/placeholder-cover.png")"
             onerror="this.onerror=null;this.src='/img/placeholder-cover.png';"
             alt="@(!string.IsNullOrEmpty(_gameTitle) ? _gameTitle : _storeName)"
             />

        <div class="deal-footer">
            <div class="deal-info">
                @if (!string.IsNullOrEmpty(_gameTitle))
                {
                    <h4 class="title clamp-2">@_gameTitle</h4>
                }
                <div class="store clamp-1">@_storeName</div>
            </div>

            <div class="deal-price">
                @if (Deal.Savings > 0)
                {
                    <span class="discount">-@Math.Round(Deal.Savings)%</span>
                }
                @if (Deal.NormalPrice > 0 && Deal.NormalPrice != Deal.Price)
                {
                    <span class="old">$@Deal.NormalPrice.ToString("F2")</span>
                }
                <span class="new">$@Deal.Price.ToString("F2")</span>
            </div>
        </div>

        <a class="stretched-link" href="@Deal.Url" target="_blank" rel="noopener" aria-label="Open deal"></a>
    </article>
}

@code {
    [Parameter] public Deal? Deal { get; set; }

    private string _gameTitle = string.Empty;
    private string _storeName = string.Empty;

    @* Ref: CheapShark title + store come as "Game Title | Store"; split for UI *@
    protected override void OnParametersSet()
    {
        var src = Deal?.Store ?? string.Empty;
        var p = src.LastIndexOf('|');
        if (p >= 0)
        {
            _gameTitle = src[..p].Trim().TrimEnd('-', '—');
            _storeName = src[(p + 1)..].Trim();
        }
        else
        {
            _gameTitle = string.Empty;
            _storeName = src.Trim();
        }
    }
}
