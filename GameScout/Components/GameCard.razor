@using GameScout.Domain.Models
@inject GameScout.State.AppState State

@if (Game is not null)
{
        <article class="card game-card">
            <img class="cover" src="@Game.Image" alt="@Game.Name" />
            <div class="card-body">
                <div class="title">@Game.Name</div>
                <div class="row between">
                    <a class="btn btn-ghost" href="/GameDetails/@Game.Id">Details</a>

                <button
                        @onclick="Toggle">
                    @(inBacklog ? "Remove" : "Add")
                </button>
                </div>
            </div>
        </article>
}

@code {
    [Parameter] public GameSummary? Game { get; set; }
    private bool inBacklog;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender || Game is null) return;
        inBacklog = await State.ContainsAsync(Game.Id);
        StateHasChanged();
    }

    private async Task Toggle()
    {
        if (Game is null) return;
        await State.ToggleAsync(Game);
        inBacklog = await State.ContainsAsync(Game.Id);
        StateHasChanged();
    }
}
