@page "/GameDetails/{id:int}"
@rendermode InteractiveServer
@inject IGameCatalogService Catalog
@inject IDealsService DealsService
@using GameDetailsModel = GameScout.Domain.Models.GameDetails
@using DealModel = GameScout.Domain.Models.Deal

@if (_loading)
{
    <div class="empty">Loading...</div>
}
else if (_details is null)
{

    <div class="empty">No details.</div>
}
else
{
    <section class="game-details stack">
        <h1 class="page-heading clamp-2">@_details.Name</h1>

        <section class="gd-meta">
            @if (_details.Metacritic is int mc)
            {
                <div class="meta">
                    <span class="meta-label">Metacritic</span>
                    <span class="meta-value">
                        <span class="score @(mc >= 85 ? "good" : mc >= 70 ? "mixed" : "bad")">@mc</span>
                    </span>
                </div>
            }

            @if (_details.Platforms?.Count > 0)
            {
                <div class="meta">
                    <span class="meta-label">Platforms</span>
                    <span class="meta-value">@string.Join(", ", _details.Platforms)</span>
                </div>
            }
            @if (_details.Genres?.Count > 0)
            {
                <div class="meta">
                    <span class="meta-label">Genres</span>
                    <span class="meta-value">@string.Join(", ", _details.Genres)</span>
                </div>
            }
        </section>

        <section class="card">
            <div class="card-body gd-description">
                @if (!string.IsNullOrWhiteSpace(_details?.Description))
                {
                    <p>@_details.Description</p>
                }
                else
                {
                    <p class="text-dim">No description available.</p>
                }
            </div>
        </section>

        @if (_details?.Screenshots?.Count > 0)
        {
            <section class="gd-gallery masonry">
                @foreach (var s in _details.Screenshots.Take(6))
                {
                    <img class="shot" src="@s" alt="screenshot" loading="lazy" />
                }
            </section>
        }

        @if (_deals?.Count > 0)
        {
            <section class="card">
                <div class="card-header">Best deals</div>
                <div class="card-body">
                    <div class="deals-grid">
                        @foreach (var d in _deals)
                        {
                            <DealCard Deal="d" />
                        }
                    </div>
                </div>
            </section>
        }
        else
        {
            <div class="empty">No deals available.</div>
        }
    </section>
}

@code {
    [Parameter] public int id { get; set; }
    private GameDetailsModel? _details;
    private readonly List<DealModel> _deals = new();
    private bool _loading;

    protected override async Task OnParametersSetAsync()
    {
        _loading = true;
        _details = await Catalog.GetDetailsAsync(id);
        _deals.Clear();
        if (!string.IsNullOrWhiteSpace(_details?.Name))
        {
            var deals = await DealsService.GetDealsByTitleAsync(_details.Name);
            _deals.AddRange(deals);
        }
        _loading = false;
    }
}
