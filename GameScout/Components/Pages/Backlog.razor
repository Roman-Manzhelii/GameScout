@page "/backlog"
@rendermode InteractiveServer
@inject GameScout.State.AppState State

<h3>Backlog</h3>

@if (!_loaded)
{
    <p>Loading...</p>
}
else if (State.Backlog.Count == 0)
{

    <p>Nothing saved.</p>
}
else
{
    @foreach (var s in State.Backlog)
    {
        <div class="card mb-2">
            <div class="card-body d-flex justify-content-between">
                <div>@s.Name</div>
                <div class="d-flex gap-2">
                    <a class="btn btn-outline-secondary" href="@($"/GameDetails/{s.GameId}")">Open</a>
                    <button class="btn btn-danger" @onclick="() => Remove(s.GameId)">Remove</button>
                </div>
            </div>
        </div>
    }
}

@code {
    private bool _loaded;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        await State.EnsureLoadedAsync();
        _loaded = true;
        StateHasChanged();
    }

    private async Task Remove(int id)
    {
        var idx = State.Backlog.FindIndex(x => x.GameId == id);
        if (idx >= 0) { State.Backlog.RemoveAt(idx); await State.SaveAsync(); }
    }
}
