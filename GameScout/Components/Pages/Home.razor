@page "/"
@rendermode InteractiveServer
@inject IGameCatalogService Catalog

<PageTitle>GameScout</PageTitle>

<h3>Search games</h3>
<SearchBar OnSearch="Search" />
<SortFilterBar OnApply="SetSort" />

@if (_loading)
{
    <p>Loading...</p>
}
else if (_items.Count == 0)
{

    <p>Nothing found</p>
}
else
{
    <p>Found @_total result(s).</p>
    @foreach (var g in _items)
    {
        <GameCard Game="g" />
    }
}

@code {
    private readonly List<GameSummary> _items = new();
    private bool _loading;
    private SortBy _sort = SortBy.Name;
    private int _page = 1, _pageSize = 20, _total;

    private Task SetSort(SortBy s) { _sort = s; return Task.CompletedTask; }

    private async Task Search(string? q)
    {
        _loading = true;
        StateHasChanged();

        var (items, total) = await Catalog.SearchAsync(
            q, platforms: null, genres: null,
            page: _page, pageSize: _pageSize, sort: _sort);

        _items.Clear();
        _items.AddRange(items);
        _total = total;

        _loading = false;
    }
}
